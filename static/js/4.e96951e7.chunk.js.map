{"version":3,"sources":["components/Dialogs/dialogs.module.css","components/Dialogs/DialogItem/dialogItem.module.css","components/Dialogs/MessageItem/messageItem.module.css","components/Dialogs/DialogItem/DialogItem.jsx","components/Dialogs/MessageItem/MessageItem.jsx","components/Dialogs/Dialogs.jsx","containers/DialogsContainer.jsx","redux/actions/dialogsAction.js"],"names":["module","exports","DialogItem","props","className","classes","dialogItem","to","id","isActive","linkDialog","activeLink","name","MessageItem","message","maxLength30","maxLengthCreator","AddMessageReduxForm","reduxForm","form","onSubmit","handleSubmit","createField","required","Textarea","Dialogs","dialogs","dialog","dialogsData","map","messages","messagesData","addMessage","messageBody","compose","connect","state","dialogsPage","dispatch","type","ADD_MESSAGE","addMessageActionCreator","withAuthRedirect"],"mappings":"iHACAA,EAAOC,QAAU,CAAC,QAAU,yBAAyB,OAAS,wBAAwB,SAAW,4B,oBCAjGD,EAAOC,QAAU,CAAC,WAAa,+BAA+B,WAAa,+BAA+B,WAAa,iC,oBCAvHD,EAAOC,QAAU,CAAC,QAAU,+B,2GCWbC,EARI,SAACC,GAChB,OACI,qBAAKC,UAAWC,IAAQC,WAAxB,SACI,cAAC,IAAD,CAASC,GAAI,YAAcJ,EAAMK,GAAKJ,UAAa,gBAAGK,EAAH,EAAGA,SAAH,MAAkB,UAAGJ,IAAQK,aAAgBD,EAAQ,WAAOJ,IAAQM,YAAe,KAAtI,SAA4IR,EAAMS,U,kBCE/IC,EANK,SAACV,GACjB,OACI,mBAAGC,UAAWC,IAAQS,QAAtB,SAAgCX,EAAMW,W,yBCGxCC,EAAcC,YAAiB,IAuC/BC,EAAsBC,YAAU,CAClCC,KAAM,WADkBD,EATL,SAACf,GACpB,OACI,uBAAMiB,SAAUjB,EAAMkB,aAAtB,UACKC,YAAY,OAAQ,cAAe,CAACC,IAAUR,GAAc,kBAAmBS,KAChF,wDASGC,EAzCC,SAACtB,GAOb,OACI,sBAAKC,UAAWC,IAAQqB,QAAxB,UACI,qBAAKtB,UAAWC,IAAQsB,OAAxB,SACKxB,EAAMuB,QAAQE,YAAYC,KAAI,SAAAF,GAC3B,OACI,cAAC,EAAD,CAAYf,KAAMe,EAAOf,KAAMJ,GAAImB,EAAOnB,IAASmB,EAAOnB,GAAK,QAI3E,qBAAKJ,UAAWC,IAAQyB,SAAxB,SACK3B,EAAMuB,QAAQK,aAAaF,KAAI,SAAAf,GAC5B,OACI,cAAC,EAAD,CAAaA,QAASA,EAAQA,SAAcA,EAAQN,SAIhE,cAACS,EAAD,CAAqBG,SArBT,SAACN,GACjBX,EAAM6B,WAAWlB,EAAQmB,oB,uBCalBC,sBACXC,aAhBkB,SAACC,GACnB,MAAO,CACHV,QAASU,EAAMC,gBAIE,SAACC,GACtB,MAAO,CACHN,WAAY,SAACC,GACTK,EClB2B,SAACL,GACpC,MAAO,CACHM,KAAMC,IACNP,YAAaA,GDeAQ,CAAwBR,SAQzCS,IAFWR,CAGbT","file":"static/js/4.e96951e7.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialogs\":\"dialogs_dialogs__3YFII\",\"dialog\":\"dialogs_dialog__t2PoK\",\"messages\":\"dialogs_messages__3WGJl\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialogItem\":\"dialogItem_dialogItem__3Twz8\",\"linkDialog\":\"dialogItem_linkDialog__19sIZ\",\"activeLink\":\"dialogItem_activeLink__YrA2h\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"message\":\"messageItem_message__3wp5g\"};","import React from \"react\";\r\nimport {NavLink} from \"react-router-dom\";\r\nimport classes from \"./dialogItem.module.css\"\r\n\r\nconst DialogItem = (props) => {\r\n    return (\r\n        <div className={classes.dialogItem}>\r\n            <NavLink to={\"/dialogs/\" + props.id}  className={  ({ isActive }) => `${classes.linkDialog}` + (isActive ? ` ${classes.activeLink}` : \"\")}>{props.name}</NavLink>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default DialogItem;","import React from \"react\";\r\nimport classes from \"./messageItem.module.css\";\r\n\r\nconst MessageItem = (props) => {\r\n    return (\r\n        <p className={classes.message}>{props.message}</p>\r\n    )\r\n}\r\n\r\nexport default MessageItem;","import React from \"react\";\r\nimport classes from \"./dialogs.module.css\";\r\nimport DialogItem from \"./DialogItem/DialogItem\";\r\nimport MessageItem from \"./MessageItem/MessageItem\";\r\nimport {reduxForm} from \"redux-form\";\r\nimport {createField, Textarea} from \"../common/FormsControls/FormsControls\";\r\nimport {maxLengthCreator, required} from \"../../utils/validators/validators\";\r\n\r\nconst maxLength30 = maxLengthCreator(30);\r\n\r\nconst Dialogs = (props) => {\r\n\r\n    let addNewMessage = (message) => {\r\n        props.addMessage(message.messageBody)\r\n    }\r\n\r\n\r\n    return(\r\n        <div className={classes.dialogs}>\r\n            <div className={classes.dialog}>\r\n                {props.dialogs.dialogsData.map(dialog => {\r\n                    return (\r\n                        <DialogItem name={dialog.name} id={dialog.id} key={dialog.id + 1} />\r\n                    )\r\n                })}\r\n            </div>\r\n            <div className={classes.messages}>\r\n                {props.dialogs.messagesData.map(message => {\r\n                    return(\r\n                        <MessageItem message={message.message} key={message.id} />\r\n                    )\r\n                })}\r\n            </div>\r\n            <AddMessageReduxForm onSubmit={addNewMessage} />\r\n        </div>\r\n    )\r\n}\r\n\r\nconst AddMessageForm = (props) => {\r\n    return (\r\n        <form onSubmit={props.handleSubmit}>\r\n            {createField(\"text\", \"messageBody\", [required, maxLength30], \"Enter your text\", Textarea)}\r\n            <button>Send message</button>\r\n        </form>\r\n    )\r\n}\r\n\r\nconst AddMessageReduxForm = reduxForm({\r\n    form: 'message'\r\n})(AddMessageForm)\r\n\r\nexport default Dialogs;","import React from \"react\";\r\nimport {\r\n    addMessageActionCreator\r\n} from \"../redux/actions/dialogsAction\";\r\nimport Dialogs from \"../components/Dialogs/Dialogs\";\r\nimport {connect} from \"react-redux\";\r\nimport {withAuthRedirect} from \"../HOC/withAuthRedirect\";\r\nimport {compose} from \"redux\";\r\n\r\n\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        dialogs: state.dialogsPage\r\n    }\r\n}\r\n\r\nlet mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        addMessage: (messageBody) => {\r\n            dispatch(addMessageActionCreator(messageBody));\r\n        }\r\n    }\r\n}\r\n\r\n\r\nexport default compose(\r\n    connect(mapStateToProps, mapDispatchToProps),\r\n    withAuthRedirect\r\n)(Dialogs);","import {ADD_MESSAGE, DELETE_MESSAGE} from \"../actionTypes/actionTypes\";\r\n\r\nexport const addMessageActionCreator = (messageBody) => {\r\n    return {\r\n        type: ADD_MESSAGE,\r\n        messageBody: messageBody\r\n    }\r\n}\r\n\r\nexport const deleteMessageActionCreator = (messageId) => {\r\n    return {\r\n        type: DELETE_MESSAGE,\r\n        messageId: messageId\r\n    }\r\n}\r\n\r\n"],"sourceRoot":""}