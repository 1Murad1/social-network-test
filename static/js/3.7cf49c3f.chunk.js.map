{"version":3,"sources":["components/Profile/profile.module.css","components/Profile/ProfileInfo/profileInfo.module.css","components/Profile/ProfileInfo/ProfileStatus/profileStatus.module.css","components/Profile/MyPosts/myPosts.module.css","components/Profile/MyPosts/Post/post.module.css","components/Profile/ProfileInfo/ProfileStatus/ProfileStatusHooks.jsx","components/Profile/ProfileInfo/ProfileInfo.jsx","redux/actions/profileAction.js","components/Profile/MyPosts/Post/Post.jsx","components/Profile/MyPosts/MyPosts.jsx","containers/MyPostContainer.jsx","components/Profile/Profile.jsx","containers/ProfileUserContainer.jsx"],"names":["module","exports","ProfileStatusHooks","props","useState","editMode","setEditMode","status","setStatus","useEffect","className","classes","profileStatus","onDoubleClick","onChange","e","currentTarget","value","autoFocus","onBlur","updateUserStatus","ProfileInfo","userProfile","profileInfo","src","photos","large","alt","Preloader","getUserStatusActionCreator","type","GET_USER_STATUS","Post","post","avatar","message","likesCount","maxLength10","maxLengthCreator","AddNewPostReduxForm","reduxForm","form","onSubmit","handleSubmit","createField","required","Textarea","MyPosts","React","memo","myPost","postText","addPost","posts","postData","map","messagePost","likes","id","compose","connect","state","newPostText","profilePage","dispatch","ADD_POST","addPostActionCreator","Profile","profile","ProfileUserApiContainer","userId","this","authorizedUserId","history","push","setUserProfile","getUserStatus","Component","AuthRedirectComponent","withAuthRedirect","auth","isAuth","a","profileApi","getUserProfile","data","SET_USER_PROFILE","setUserProfileThunkCreator","response","getUserStatusThunkCreator","resultCode","updateUserStatusThunkCreator","useParams"],"mappings":"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","file":"static/js/3.7cf49c3f.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"profile\":\"profile_profile__3cwuU\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"profileInfo\":\"profileInfo_profileInfo__3sBw5\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"profileStatus\":\"profileStatus_profileStatus__2oYnP\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"myPost\":\"myPosts_myPost__2DNlG\",\"posts\":\"myPosts_posts__1im5i\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"post\":\"post_post__jTX2w\",\"avatar\":\"post_avatar__KNNEj\",\"message\":\"post_message__3ZQoL\"};","import React, {useEffect, useState} from \"react\";\r\nimport classes from \"./profileStatus.module.css\";\r\n\r\nconst ProfileStatusHooks = (props) => {\r\n\r\n    let [editMode, setEditMode] = useState(false);\r\n    let [status, setStatus] = useState(props.status );\r\n\r\n    useEffect( () => {\r\n        setStatus(props.status)\r\n    }, [props.status])\r\n\r\n    const activateEditMode = () => {\r\n        setEditMode(true)\r\n    }\r\n\r\n    const deactivateEditMode = () => {\r\n        setEditMode(false);\r\n        props.updateUserStatus(status)\r\n    }\r\n\r\n\r\n    const onStatusChange = (e) => {\r\n        setStatus(e.currentTarget.value)\r\n    }\r\n\r\n    return (\r\n        <div className={classes.profileStatus}>\r\n            {\r\n                !editMode &&\r\n                <div>\r\n                    <span onDoubleClick={activateEditMode}>{props.status || 'no status'}</span>\r\n                </div>\r\n            }\r\n\r\n            {\r\n                editMode &&\r\n                <div>\r\n                    <input onChange={onStatusChange} autoFocus={true} onBlur={deactivateEditMode}\r\n                           value={status}/>\r\n                </div>\r\n            }\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ProfileStatusHooks;","import React from \"react\";\r\nimport classes from \"./profileInfo.module.css\";\r\nimport Preloader from \"../../common/Preloader/Preloader\";\r\nimport ProfileStatusHooks from \"./ProfileStatus/ProfileStatusHooks\";\r\n\r\nconst ProfileInfo = ({userProfile, status, updateUserStatus}) => {\r\n    if(!userProfile) {\r\n        return <Preloader />\r\n    }\r\n    return (\r\n        <div className={classes.profileInfo}>\r\n            <div>\r\n                <img src={userProfile.photos.large} alt=\"avatar logo\" />\r\n                <ProfileStatusHooks status={status} updateUserStatus={updateUserStatus} />\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ProfileInfo;","import {\r\n    ADD_POST, DELETE_POST,\r\n    GET_USER_STATUS,\r\n    SET_USER_PROFILE\r\n} from \"../actionTypes/actionTypes\";\r\nimport {profileApi} from \"../../api/api\";\r\n\r\nexport const addPostActionCreator = (postText) => ({type: ADD_POST, postText});\r\nexport const deletePostActionCreator = (postId) => ({type: DELETE_POST, postId});\r\nexport const setUserProfileActionCreator = (userProfile) => ({type: SET_USER_PROFILE, userProfile});\r\nexport const getUserStatusActionCreator = (status) => ({type: GET_USER_STATUS, status});\r\n\r\nexport const setUserProfileThunkCreator = (userId) => {\r\n    return async (dispatch) => {\r\n        let data = await profileApi.getUserProfile(userId)\r\n        dispatch(setUserProfileActionCreator(data))\r\n    }\r\n}\r\n\r\nexport const getUserStatusThunkCreator = (userId) => {\r\n    return async (dispatch) => {\r\n        let response = await profileApi.getUserStatus(userId)\r\n        dispatch(getUserStatusActionCreator(response.data))\r\n    }\r\n}\r\n\r\nexport const updateUserStatusThunkCreator = (status) => {\r\n    return async (dispatch) => {\r\n        let response = await profileApi.updateUserStatus(status)\r\n        if (response.data.resultCode === 0) {\r\n            dispatch(getUserStatusActionCreator(status))\r\n        }\r\n    }\r\n\r\n}","import React from \"react\";\r\nimport classes from \"./post.module.css\";\r\n\r\nconst Post = (props) => {\r\n\r\n    return (\r\n        <div className={classes.post}>\r\n           <div className={classes.avatar}>\r\n               <img src=\"https://media.istockphoto.com/vectors/male-avatar-icon-or-portrait-handsome-young-man-face-with-beard-vector-id1143511824?k=20&m=1143511824&s=170667a&w=0&h=OjcgBMRpj82IXTItixtv6aIbeP9vny0lCqg0eY6ZONQ=\" alt=\"avatar\" />\r\n               <p className={classes.message}>{props.message}</p>\r\n           </div>\r\n            <div className=\"likes\">\r\n                <p><span>like</span> <span>{props.likesCount}</span></p>\r\n            </div>\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Post;","import React from \"react\";\r\nimport classes from \"./myPosts.module.css\";\r\nimport Post from \"./Post/Post\";\r\nimport {reduxForm} from \"redux-form\";\r\nimport {maxLengthCreator, required} from \"../../../utils/validators/validators\";\r\nimport {createField, Textarea} from \"../../common/FormsControls/FormsControls\";\r\n\r\nconst maxLength10 = maxLengthCreator(10)\r\n\r\nconst AddNewPostForm = (props) => {\r\n    return (\r\n        <form onSubmit={props.handleSubmit}>\r\n            {createField(\"text\", \"postText\", [required, maxLength10], \"Enter your post text\", Textarea)}\r\n            <button>Add post</button>\r\n        </form>\r\n    )\r\n}\r\n\r\nconst AddNewPostReduxForm = reduxForm({\r\n    form: 'addPost'\r\n})(AddNewPostForm)\r\n\r\nconst MyPosts = React.memo(props => {\r\n\r\n    let addNewPost = (postText) => {\r\n        props.addPost(postText.postText)\r\n    }\r\n\r\n\r\n    return (\r\n        <div className={classes.myPost}>\r\n            My posts\r\n            <AddNewPostReduxForm onSubmit={addNewPost}/>\r\n            <div className={classes.posts}>\r\n                {props.postData.map(post => {\r\n                    return (\r\n                        <Post message={post.messagePost} likesCount={post.likes} key={post.id}/>\r\n                    )\r\n                })}\r\n            </div>\r\n        </div>\r\n    )\r\n\r\n\r\n})\r\n\r\n\r\nexport default MyPosts;","import React from \"react\";\r\nimport {addPostActionCreator} from \"../redux/actions/profileAction\";\r\nimport MyPosts from \"../components/Profile/MyPosts/MyPosts\";\r\nimport {connect} from \"react-redux\";\r\nimport {compose} from \"redux\";\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        newPostText: state.profilePage.newPostText,\r\n        postData: state.profilePage.postData\r\n    }\r\n};\r\n\r\nlet mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        addPost: (postText) => {\r\n            dispatch(addPostActionCreator(postText));\r\n        }\r\n    }\r\n};\r\n\r\nexport default compose(connect(mapStateToProps, mapDispatchToProps))(MyPosts);","import React from \"react\";\r\nimport  classes from \"./profile.module.css\";\r\nimport ProfileInfo from \"./ProfileInfo/ProfileInfo\";\r\nimport MyPostsContainer from \"../../containers/MyPostContainer\";\r\n\r\n\r\nconst Profile = (props) => {\r\n\r\n    return (\r\n        <div className={classes.profile}>\r\n            <ProfileInfo userProfile={props.userProfile} status={props.status} updateUserStatus={props.updateUserStatus} />\r\n            <MyPostsContainer  />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Profile;","import React from \"react\";\r\nimport Profile from \"../components/Profile/Profile\";\r\nimport {connect} from \"react-redux\";\r\nimport {\r\n    getUserStatusThunkCreator,\r\n    setUserProfileThunkCreator,\r\n    updateUserStatusThunkCreator\r\n} from \"../redux/actions/profileAction\";\r\nimport {useParams} from \"react-router-dom\";\r\nimport {withAuthRedirect} from \"../HOC/withAuthRedirect\";\r\nimport {compose} from \"redux\";\r\n\r\nclass ProfileUserApiContainer extends React.Component {\r\n\r\n    componentDidMount() {\r\n        let userId = this.props.userId;\r\n        if (!userId) {\r\n            userId = this.props.authorizedUserId;\r\n            if(!userId) {\r\n                this.props.history.push('/login')\r\n            }\r\n        }\r\n\r\n        this.props.setUserProfile(userId)\r\n        this.props.getUserStatus(userId)\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <Profile {...this.props}\r\n                     userProfile={this.props.userProfile}\r\n                     status={this.props.status}\r\n                     updateUserStatus={this.props.updateUserStatus}/>\r\n        )\r\n    }\r\n}\r\n\r\nlet AuthRedirectComponent = withAuthRedirect(ProfileUserApiContainer)\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        userProfile: state.profilePage.userProfile,\r\n        status: state.profilePage.status,\r\n        authorizedUserId: state.auth.userId,\r\n        isAuth: state.auth.isAuth\r\n    }\r\n}\r\n\r\nlet mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        setUserProfile: (userId) => {\r\n            dispatch(setUserProfileThunkCreator(userId))\r\n        },\r\n        getUserStatus: (userId) => {\r\n            dispatch(getUserStatusThunkCreator(userId))\r\n        },\r\n        updateUserStatus(status) {\r\n            dispatch(updateUserStatusThunkCreator(status))\r\n        }\r\n    }\r\n}\r\n\r\nlet WithUrlDataContainerComponent = (props) => {\r\n    let {userId} = useParams();\r\n    return (\r\n        <AuthRedirectComponent userId={userId} {...props} userProfile={props.userProfile}\r\n                                 setUserProfile={props.setUserProfile}/>\r\n    )\r\n}\r\n\r\n\r\nexport default compose( connect(mapStateToProps, mapDispatchToProps))(WithUrlDataContainerComponent);"],"sourceRoot":""}